**DESIGN RATIONALE**

1. **Component Inventory Verification:** I have verified all component references against the provided design system data.

2. **Layout Decisions:** The layout uses a vertical layout container (`layoutMode: "VERTICAL"`) to stack the notification settings.  Each notification type is represented as a separate list item (`10:10214`).  The list items are spaced vertically using the default `itemSpacing` of 16 pixels (from the default style of the list item component).  Padding is applied to the main container to provide visual breathing room.  Horizontal sizing for text elements is set to `FILL` so that the descriptive text spans the full width of the screen.

3. **User Flow Reasoning:** Users can easily toggle each notification type on or off with the switch.  The descriptive text clearly explains each notification type, allowing users to make informed decisions. The visual state of the toggle switches (on/off) and color scheme provide clear feedback about the enabled and disabled notifications.

4. **Component Choices:** I chose the `switch` component (`10:9912`) for toggling notifications because it's a standard and well-understood UI element for binary options.  It provides a clear visual distinction between on and off states.  I considered using checkboxes (`10:9586`), but switches are more appropriate for this specific context of enabling/disabling notifications. I also considered radio buttons (`10:9825`) but only one option could be selected which is not applicable here.

5. **Component Gaps:** The design system lacks a dedicated "notification settings" component or a pre-built component to combine the `switch` component with the descriptive text in a visually pleasing manner.  To address this, I used the existing `list-item` component (`10:10214`) to create a consistent structure for each notification setting.  This approach maintains design system compliance while solving the functional requirement using a straightforward layout.  This provides a clean, organized interface that's easy to use while adhering to the existing design system.

6. **Visual Hierarchy:** The primary visual hierarchy is established by the vertical order of list items (top to bottom).  The descriptive text for each notification type is visually prominent next to the switch.  The combination of clear labels and toggle switches creates a user-friendly and intuitive design.

7. **Variant Selection Rationale:** For the `switch` component, I have used the `variants`: {"Selected": "true/false", "State": "enabled"} for each switch. The "enabled" state ensures that all switches are interactive. The "Selected" value will be dynamically updated based on the user's selection. I considered using other "State" variants (hovered, pressed, focused, disabled), but these are unnecessary in this context; the default "enabled" state is sufficient.  


8. **Native Element Justification:** No native elements are required. The design system components are sufficient to meet the requirements.

**DESIGN SPECIFICATION**

```json
{
  "layoutContainer": {
    "name": "Notification Settings Screen",
    "layoutMode": "VERTICAL",
    "itemSpacing": 16,
    "paddingTop": 16,
    "paddingBottom": 16,
    "paddingLeft": 16,
    "paddingRight": 16,
    "primaryAxisSizingMode": "AUTO",
    "counterAxisSizingMode": "AUTO",
    "items": [
      {
        "type": "list-item",
        "id": "10:10214",
        "variants": {
          "Condition": "1-line",
          "Leading": "Switch",
          "Trailing": "None",
          "Show overline": "false",
          "Show supporting text": "false"
        },
        "properties": {
          "Headline": "Push Notifications",
          "Leading": {
            "type": "component",
            "id": "10:9912",
            "variants": {
              "Selected": "false",
              "State": "enabled",
              "Icon": "false"
            }
          }
        }
      },
      {
        "type": "list-item",
        "id": "10:10214",
        "variants": {
          "Condition": "1-line",
          "Leading": "Switch",
          "Trailing": "None",
          "Show overline": "false",
          "Show supporting text": "false"
        },
        "properties": {
          "Headline": "Email Alerts",
          "Leading": {
            "type": "component",
            "id": "10:9912",
            "variants": {
              "Selected": "false",
              "State": "enabled",
              "Icon": "false"
            }
          }
        }
      },
      {
        "type": "list-item",
        "id": "10:10214",
        "variants": {
          "Condition": "1-line",
          "Leading": "Switch",
          "Trailing": "None",
          "Show overline": "false",
          "Show supporting text": "false"
        },
        "properties": {
          "Headline": "SMS Updates",
          "Leading": {
            "type": "component",
            "id": "10:9912",
            "variants": {
              "Selected": "false",
              "State": "enabled",
              "Icon": "false"
            }
          }
        }
      },
      {
        "type": "list-item",
        "id": "10:10214",
        "variants": {
          "Condition": "1-line",
          "Leading": "Switch",
          "Trailing": "None",
          "Show overline": "false",
          "Show supporting text": "false"
        },
        "properties": {
          "Headline": "Promotional Offers",
          "Leading": {
            "type": "component",
            "id": "10:9912",
            "variants": {
              "Selected": "false",
              "State": "enabled",
              "Icon": "false"
            }
          }
        }
      },
      {
        "type": "button",
        "id": "10:3907",
        "variants": {
          "Platform": "Android+Web",
          "Size": "Medium",
          "Type": "Filled",
          "State": "Default",
          "Color": "Green"
        },
        "properties": {
          "Action": "Save Changes"
        }
      }
    ]
  }
}
```
